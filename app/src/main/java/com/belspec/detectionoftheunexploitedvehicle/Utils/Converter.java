package com.belspec.detectionoftheunexploitedvehicle.Utils;


import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.util.Base64;

import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.CreateDetection.Image;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

public class Converter {
    public static String encodeToBase64(String strIn)
    {
        File file = new File(strIn);
        if (file.exists()) {

            FileInputStream imageInFile = null;
            try {
                imageInFile = new FileInputStream(file);
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
            byte imageData[] = new byte[(int) file.length()];
            try {
                imageInFile.read(imageData);
            } catch (IOException e) {
                e.printStackTrace();
            }
            String imageDataString = Base64.encodeToString(imageData, Base64.DEFAULT);

            try {
                imageInFile.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return imageDataString;
        }
        return "";
    }

    public static boolean compressImage(String path, Bitmap.CompressFormat format, int quality){

        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        Bitmap bm = BitmapFactory.decodeFile(path);
        bm.compress(format, quality, baos);

        try {
            FileOutputStream fos = new FileOutputStream(new File(path));
            fos.write(baos.toByteArray());
            fos.close();
            return true;
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return false;
    }

}
