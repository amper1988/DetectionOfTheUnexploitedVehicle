package com.belspec.detectionoftheunexploitedvehicle.Retrofit;


import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.CreateDetection.Request.CreateDetectionRequestEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.CreateDetection.Response.CreateDetectionResponseEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.CreateEvacuation.Request.CreateEvacuationRequestEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.CreateEvacuation.Response.CreateEvacuationResponseEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.GetDetectionList.Request.GetDetectionListRequestEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.GetDetectionList.Response.GetDetectionListResponseEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.GetItemImage.Request.GetItemImageRequestEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.GetItemImage.Response.GetItemImageResponseEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.GetParkingList.Request.GetParkingListRequestEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.GetParkingList.Response.GetParkingListResponseEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.TakeDefaultData.Request.GetDefaultDataRequestEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.TakeDefaultData.Response.GetDefaultDataResponseEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.Test.Request.TestRequestEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.Test.Response.TestResponseEnvelope;

import retrofit2.Call;
import retrofit2.http.Body;
import retrofit2.http.Header;
import retrofit2.http.Headers;
import retrofit2.http.POST;

public interface RetrofitService {
    @Headers({
            "Content-Type: application/soap+xml",
            "Accept-Charset: utf-8"
    })
    @POST("ws/testconnection")
    Call<TestResponseEnvelope> executeTestOperation(@Header("Authorization") String auth, @Body TestRequestEnvelope request);

    @POST("ws/takedefaultdata")
    Call<GetDefaultDataResponseEnvelope> executeGetDefaultData(@Header("Authorization") String auth, @Body GetDefaultDataRequestEnvelope requestEnvelope);

    @POST("ws/takedefaultdata")
    Call<GetDetectionListResponseEnvelope> executeGetDetectionList(@Header("Authorization") String auth, @Body GetDetectionListRequestEnvelope requestEnvelope);
    @Headers({
            "Content-Type: application/soap+xml",
            "Accept-Charset: utf-8"
    })
    @POST("ws/createdata")
    Call<CreateDetectionResponseEnvelope> executeCreateDetection(@Header("Authorization") String auth, @Body CreateDetectionRequestEnvelope requestEnvelope);

    @POST("ws/takedefaultdata")
    Call<GetItemImageResponseEnvelope> executeGetItemImage(@Header("Authorization") String auth, @Body GetItemImageRequestEnvelope requestEnvelope);

    @POST("ws/takedefaultdata")
    Call<GetParkingListResponseEnvelope> executeGetParkingList(@Header("Authorization") String auth, @Body GetParkingListRequestEnvelope requestEnvelope);

    @POST("ws/createdata")
    Call<CreateEvacuationResponseEnvelope> executeCreateEvacuation(@Header("Authorization") String auth, @Body CreateEvacuationRequestEnvelope requestEnvelope);
    //@POST("ws/get")
   // Call<GetCarListResponseEnvelope> executeGetCarListOperation(@Header("Authorization") String auth, @Body GetCarListRequestEnvelope request);

}
