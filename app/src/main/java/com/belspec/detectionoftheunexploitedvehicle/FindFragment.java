package com.belspec.detectionoftheunexploitedvehicle;

import android.app.Fragment;
import android.content.Context;
import android.location.Address;
import android.location.Geocoder;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.Toast;

import com.belspec.detectionoftheunexploitedvehicle.Adapters.DetectionDocListAdapter;
import com.belspec.detectionoftheunexploitedvehicle.Gps.GPSTracker;
import com.belspec.detectionoftheunexploitedvehicle.Interface.ResponseListener;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Api;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.GetDetectionList.Request.GetDetectionListRequestEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.GetDetectionList.Response.DetectionDoc;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.GetDetectionList.Response.GetDetectionListResponseEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.TakeDefaultData.Contractor;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.TakeDefaultData.Manufacture;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.TakeDefaultData.Model;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.TakeDefaultData.PoliceDepartment;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.TakeDefaultData.Request.GetDefaultDataRequestEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.Model.TakeDefaultData.Response.GetDefaultDataResponseEnvelope;
import com.belspec.detectionoftheunexploitedvehicle.Retrofit.RetrofitService;
import com.belspec.detectionoftheunexploitedvehicle.Utils.Encode;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

import retrofit2.Response;


public class FindFragment extends Fragment implements View.OnClickListener,  ResponseListener{
    private static FindFragment instance;
    Button btnFind;
    EditText edtCarId;
    EditText edtVin;
    AutoCompleteTextView actvManuf;
    Spinner spnContractor;
    RecyclerView rvDetectionList;
    View mView;

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        mView = inflater.inflate(R.layout.find_fragment, null);
        return mView;
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        initViews();
        initComponents();
    }

    private void initViews(){
        btnFind = (Button)mView.findViewById(R.id.btnFindDetection);
        edtCarId = (EditText)mView.findViewById(R.id.edtFindByCarId);
        edtVin = (EditText)mView.findViewById(R.id.edtFindByVin);
        rvDetectionList = (RecyclerView)mView.findViewById(R.id.rvDetectionList);
        spnContractor = (Spinner)mView.findViewById(R.id.spnFindByContractor);
        actvManuf = (AutoCompleteTextView)mView.findViewById(R.id.actvFindByManufacture);
    }

    private void initComponents(){
        btnFind.setOnClickListener(this);
        rvDetectionList.setLayoutManager(new LinearLayoutManager(getActivity()));
        RetrofitService retrofitService = Api.createRetrofitService();
        MyCallback<GetDefaultDataResponseEnvelope> call = new MyCallback<>();
        call.addResponseListener(this);
        retrofitService.executeGetDefaultData(
                Encode.getBasicAuthTemplate(
                        UserManager.getInstanse().getmLogin(),
                        UserManager.getInstanse().getmPassword()
                ),
                new GetDefaultDataRequestEnvelope()
        ).enqueue(call);
    }

    public static FindFragment getInstance(){
        if (instance == null){
            instance = new FindFragment();
        }
        return instance;
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()){
            case R.id.btnFindDetection:
                DetectionDocListAdapter.getInstance().clear();
                RetrofitService retrofitService = Api.createRetrofitService();
                MyCallback<GetDetectionListResponseEnvelope> call = new MyCallback<>();
                call.addResponseListener(this);
                retrofitService.executeGetDetectionList(Encode.getBasicAuthTemplate(
                        UserManager.getInstanse().getmLogin(),
                        UserManager.getInstanse().getmPassword()
                ), new GetDetectionListRequestEnvelope(
                        actvManuf.getText().toString(),
                        spnContractor.getSelectedItem().toString(),
                        edtCarId.getText().toString(),
                        edtVin.getText().toString()
                )).enqueue(call);
                break;
        }
    }

    @Override
    public void AuthorizationOK(Response response) {
        if (response.body().getClass() == GetDefaultDataResponseEnvelope.class){

            GetDefaultDataResponseEnvelope responseEnvelope = (GetDefaultDataResponseEnvelope)response.body();
            List<Manufacture> manufactures = responseEnvelope.body().getManufactureList();
            ArrayList<String> stringArrayManufactureList = new ArrayList<>();
            for ( Manufacture manufacture : manufactures) {
                stringArrayManufactureList.add(manufacture.getName());
            }
            ArrayAdapter<String> arrayAdapterManufacture  = new ArrayAdapter<>(this.getActivity(), android.R.layout.simple_list_item_1, stringArrayManufactureList );
            actvManuf.setAdapter(arrayAdapterManufacture);

            List<Contractor> contractors = responseEnvelope.body().getContractorList();
            ArrayList<String> stringArrayContractorList = new ArrayList<>();
            for ( Contractor contractor : contractors) {
                stringArrayContractorList.add(contractor.getName());
            }
            ArrayAdapter<String> arrayAdapterContractor  = new ArrayAdapter<>(this.getActivity(), android.R.layout.simple_list_item_1, stringArrayContractorList );
            spnContractor.setAdapter(arrayAdapterContractor);
        }else if (response.body().getClass() == GetDetectionListResponseEnvelope.class){
            GetDetectionListResponseEnvelope responseEnvelope = (GetDetectionListResponseEnvelope)response.body();
            List<DetectionDoc> detectionDocs = responseEnvelope.getDetectionList();
            if (detectionDocs!=null) {
                DetectionDocListAdapter detectionDocListAdapter = DetectionDocListAdapter.getInstance();
                detectionDocListAdapter.addDetectionList(detectionDocs);
                rvDetectionList.setAdapter(detectionDocListAdapter);
            }else{
                Toast.makeText(getActivity(), "Nothing found", Toast.LENGTH_SHORT).show();
            }
        }
    }

    @Override
    public void AuthorizationBad(Response response) {
        Toast.makeText(this.getActivity(), "Wrong authorization. Response code: " + response.code()+ " " + response.message(), Toast.LENGTH_SHORT).show();
        Log.d("ERROR", response.message());
    }

    @Override
    public void AuthorizationFail(Throwable t) {
        Toast.makeText(this.getActivity(), "Network fail. " + t.getMessage(), Toast.LENGTH_SHORT).show();
        Log.d("ERROR", t.getLocalizedMessage() + t.getMessage());
    }

}
