package com.belspec.unexploited.app.ui.main;

import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.drawable.AnimationDrawable;
import android.os.Bundle;
import android.provider.Settings;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.view.ContextThemeWrapper;
import android.view.KeyEvent;
import android.view.View;
import android.view.inputmethod.EditorInfo;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.belspec.unexploited.app.R;
import com.belspec.unexploited.app.ui.control.ControlActivity;
import com.belspec.unexploited.app.utils.AppHolder;
import com.belspec.unexploited.app.utils.UserManager;
import com.belspec.unexploited.app.utils.Utils;

import butterknife.BindView;
import butterknife.ButterKnife;

public class MainActivity extends AppCompatActivity implements View.OnClickListener, TextView.OnEditorActionListener, MainContract.View{

    @BindView(R.id.btnLogin) Button btnLogin;
    @BindView(R.id.edtName) EditText edtName;
    @BindView(R.id.edtPwd) EditText edtPwd;
    @BindView(R.id.response) TextView txvStatus;
    @BindView(R.id.imvLoading) ImageView imvLoading;
    @BindView(R.id.rllContent) RelativeLayout rllContent;
    MainContract.Presenter presenter;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        ButterKnife.bind(this);
        initComponents();
        presenter = new MainPresenter(this);
        presenter.onCreate(savedInstanceState);
    }

    @Override
    protected void onPostResume() {
        presenter.onResume();
        super.onPostResume();
    }

    @Override
    protected void onPause() {
        presenter.onPause();
        super.onPause();

    }

    private void initComponents() {
        //initial action of views
        btnLogin.setOnClickListener(this);
        edtName.setOnClickListener(this);
        edtPwd.setOnClickListener(this);
        edtName.setText(UserManager.getInstanse().getmLogin());
        edtPwd.setImeActionLabel("DONE", EditorInfo.IME_ACTION_DONE);
        edtName.setOnEditorActionListener(this);
        edtName.setImeActionLabel("NEXT", EditorInfo.IME_ACTION_NEXT);
        edtPwd.setOnEditorActionListener(this);
        imvLoading.setBackgroundResource(R.drawable.pb_loading);
        setLoading(false);
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.btnLogin:
                Utils.hideKeyboard(this);
                presenter.onLogin();
                break;
        }
    }

    @Override
    public boolean onEditorAction(TextView textView, int actionId, KeyEvent keyEvent) {
        if (actionId == EditorInfo.IME_ACTION_NEXT) {
            edtPwd.requestFocus();
            return true;
        }
        if (actionId == EditorInfo.IME_ACTION_DONE) {
            onClick(btnLogin);
            return true;
        }
        return false;
    }


    @Override
    public Context getContext() {
        return this.getApplication();
    }

    @Override
    public void setLogin(String login) {
        edtName.setText(login);
    }

    @Override
    public void setPassword(String password) {
        edtPwd.setText(password);
    }

    @Override
    public String getLogin() {
        return edtName.getText().toString();
    }

    @Override
    public String getPassword() {
        return edtPwd.getText().toString();
    }

    @Override
    public void showMessage(String message) {
        txvStatus.setText(message);
    }

    @Override
    public void setLoading(boolean bool) {
        AnimationDrawable animation = (AnimationDrawable) imvLoading.getBackground();
        if (bool) {
            imvLoading.setVisibility(View.VISIBLE);
            animation.start();
            rllContent.setVisibility(View.GONE);
        } else {
            imvLoading.setVisibility(View.GONE);
            animation.stop();
            rllContent.setVisibility(View.VISIBLE);
        }
    }

    @Override
    public void afterLogin() {
        Intent intent = new Intent(this, ControlActivity.class);
        startActivity(intent);
        finish();
    }

    @Override
    public void showGPSAlert() {
        AlertDialog.Builder alertDialog = new AlertDialog.Builder(new ContextThemeWrapper(this, R.style.MyMaterialTheme));
        // Setting Dialog Title
        alertDialog.setTitle("Настойте GPS");

        // Setting Dialog Message
        alertDialog.setMessage("Определение GPS-координат отключено. Хотите перейти в настройки?");

        // On pressing the Settings button.
        alertDialog.setPositiveButton("Настройки", new DialogInterface.OnClickListener() {
            public void onClick(DialogInterface dialog,int which) {
                Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
                startActivity(intent);
            }
        });
        // On pressing the cancel button
        alertDialog.setNegativeButton("Отмена", new DialogInterface.OnClickListener() {
            public void onClick(DialogInterface dialog, int which) {
                dialog.cancel();
            }
        });
        // Showing Alert Message
        alertDialog.show();
    }
}
