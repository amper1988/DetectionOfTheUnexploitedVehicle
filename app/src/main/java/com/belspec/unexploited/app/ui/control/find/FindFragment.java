package com.belspec.unexploited.app.ui.control.find;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.graphics.drawable.AnimationDrawable;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.inputmethod.EditorInfo;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import com.belspec.unexploited.app.R;
import com.belspec.unexploited.app.interfaces.EndlessRecyclerViewScrollLisnener;
import com.belspec.unexploited.app.interfaces.RecyclerItemClickListener;
import com.belspec.unexploited.app.ui.evacuation.EvacuationActivity;
import com.belspec.unexploited.app.utils.Utils;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import butterknife.BindView;
import butterknife.ButterKnife;


public class FindFragment extends Fragment implements View.OnClickListener, TextView.OnEditorActionListener, FindContract.View{
    @BindView(R.id.btnFindDetection) Button btnFind;
    @BindView(R.id.edtFindByCarId) EditText edtCarId;
    private final List<String> statusArray = new ArrayList<>(Arrays.asList("Обнаружен", "На стоянке", "Выдано", "Утилизировано"));
    @BindView(R.id.actvFindByManufacture) AutoCompleteTextView actvManuf;
    @BindView(R.id.actvFindByContractor) AutoCompleteTextView actvContractor;
    @BindView(R.id.rvDetectionList) RecyclerView rvDetectionList;
    @BindView(R.id.imvLoading)ImageView imvLoading;
    @BindView(R.id.spnStatus)
    Spinner spnStatus;
    View mView;
    FindContract.Presenter presenter;
    EndlessRecyclerViewScrollLisnener endlessRecyclerViewScrollLisnener;
    LinearLayoutManager llm;

    public static final int REQUEST_CODE_ITEM_ACTIVITY = 44;
    @BindView(R.id.rllContent)
    LinearLayout rllContent;

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        mView = inflater.inflate(R.layout.find_fragment, container, false);
        ButterKnife.bind(this, mView);
        initViews();
        initComponents();
        presenter = new FindPresenter(this);
        presenter.onCreate(savedInstanceState);
        return mView;
    }

    @Override
    public void onSaveInstanceState(Bundle outState) {
        presenter.onSaveInstanceState(outState);
        super.onSaveInstanceState(outState);
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (resultCode == Activity.RESULT_OK && requestCode == REQUEST_CODE_ITEM_ACTIVITY && data != null) {
            Utils.showMessage(getContext(), data.getStringExtra(EvacuationActivity.EVACUATION_RESULT_KEY));
            btnFind.performClick();
        }
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.btnFindDetection:
                Utils.hideKeyboard(getActivity());
                Log.d("DEBUG", "onClick(btnFindDetection) FindFragment");
                presenter.onFindClick();
                break;
        }
    }

    @Override
    public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
        switch (i) {
            case EditorInfo.IME_ACTION_SEARCH:
                presenter.onFindClick();
                return true;
        }
        return false;
    }

    @Override
    public void startItemActivity(Intent intent) {
        startActivityForResult(intent, REQUEST_CODE_ITEM_ACTIVITY);
    }

    @Override
    public Context getViewContext() {
        return getActivity();
    }

    @Override
    public void setLoading(boolean bool) {
        Log.d("DEBUG", "setLoading(" + bool + ") FindFragment");
        AnimationDrawable animationDrawable = (AnimationDrawable) imvLoading.getBackground();
        if (bool) {
            rvDetectionList.setVisibility(View.GONE);
            rllContent.setVisibility(View.GONE);
            btnFind.setVisibility(View.GONE);
            imvLoading.setVisibility(View.VISIBLE);
            animationDrawable.start();
        } else {
            imvLoading.setVisibility(View.GONE);
            animationDrawable.stop();
            rllContent.setVisibility(View.VISIBLE);
            btnFind.setVisibility(View.VISIBLE);
            rvDetectionList.setVisibility(View.VISIBLE);
        }
    }

    @Override
    public String getManufacture() {
        return actvManuf.getText().toString();
    }

    @Override
    public void setManufacture(String manufacture) {
        actvManuf.setText(manufacture);
    }

    @Override
    public void setManufactures(List<String> manufactures) {
        actvManuf.setAdapter(new ArrayAdapter<>(this.getActivity(), R.layout.spinner_item, manufactures));
    }

    @Override
    public String getContractor() {
        return actvContractor.getText().toString();
    }

    @Override
    public void setContractor(String contractor) {
        actvContractor.setText(contractor);
    }

    @Override
    public void setContractors(List<String> contractors) {
        actvContractor.setAdapter(new ArrayAdapter<>(this.getActivity(), R.layout.spinner_item, contractors));
    }

    @Override
    public String getCarId() {
        return edtCarId.getText().toString();
    }

    @Override
    public void setCarId(String carId) {
        edtCarId.setText(carId);
    }


    @Override
    public void setAdapter(RecyclerView.Adapter adapter) {
        rvDetectionList.setAdapter(adapter);
    }

    @Override
    public void showMessage(String message) {
        Toast.makeText(getActivity(), message, Toast.LENGTH_SHORT).show();
    }

    private void initViews() {
        edtCarId.setImeActionLabel("Search", EditorInfo.IME_ACTION_SEARCH);
        edtCarId.setOnEditorActionListener(this);
        actvManuf.setImeActionLabel("Search", EditorInfo.IME_ACTION_SEARCH);
        actvManuf.setOnEditorActionListener(this);
        imvLoading.setBackgroundResource(R.drawable.pb_loading);
        imvLoading.setVisibility(View.GONE);
    }

    private void initComponents() {
        llm = new LinearLayoutManager(getActivity());
        endlessRecyclerViewScrollLisnener = new EndlessRecyclerViewScrollLisnener(llm) {
            @Override
            public void onLoadMore() {
                presenter.onLoadMore();
            }
        };
        btnFind.setOnClickListener(this);
        rvDetectionList.setLayoutManager(llm);
        rvDetectionList.addOnScrollListener(endlessRecyclerViewScrollLisnener);
        rvDetectionList.addOnItemTouchListener(new RecyclerItemClickListener(getActivity(), new RecyclerItemClickListener.OnItemClickListener() {
            @Override
            public void onItemClick(View view, int position) {
                presenter.onItemClick(position);
            }
        }));
        spnStatus.setVisibility(View.GONE);
    }

    @Override
    public void onStop() {
        presenter.onStop();
        super.onStop();
    }
}
