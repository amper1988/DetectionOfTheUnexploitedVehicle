package com.belspec.unexploited.app.adapters;


import android.graphics.Bitmap;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import com.belspec.unexploited.app.R;
import com.belspec.unexploited.app.retrofit.model.DetectionDoc;
import com.belspec.unexploited.app.utils.Converter;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

public class DetectionDocListAdapter extends RecyclerView.Adapter<DetectionDocListAdapter.DetectionDocViewHolder>{
    private ArrayList<DetectionDoc> detectionDocList = new ArrayList<>();

    public DetectionDocListAdapter(ArrayList<DetectionDoc> list){
        if (list != null) {
            detectionDocList.addAll(list);
            notifyDataSetChanged();
        }
    }

    public DetectionDocListAdapter(DetectionDoc doc){
        detectionDocList.add(doc);
        notifyDataSetChanged();
    }

    public DetectionDocListAdapter(){
        super();
    }

    public void addItem(DetectionDoc doc){
        this.detectionDocList.add(doc);
        notifyDataSetChanged();
    }

    public void addDetectionList(List<DetectionDoc> detectionDocList){
        this.detectionDocList.addAll(detectionDocList);
        notifyDataSetChanged();

    }

    public DetectionDoc getItem(int pos){
        return detectionDocList.get(pos);
    }

    public ArrayList<DetectionDoc> getDetectionDocList(){
        return detectionDocList;
    }

    @Override
    public void onBindViewHolder(DetectionDocViewHolder holder, int position) {
        SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy");
        DetectionDoc doc = detectionDocList.get(position);
        setTextTo(holder.txvPolDep, "ГАИ", doc.getPolDep());
        setTextTo(holder.txvManufacture, "Марка", doc.getManufacture());
        setTextTo(holder.txvModel, "Модель", doc.getModel());
        setTextTo(holder.txvContractor, "Район", doc.getContractor());
        setTextTo(holder.txvDocId, "Документ №", doc.getId());
        setTextTo(holder.txvCarId, "Регистрационный номер", doc.getCarId());
        setTextTo(holder.txvParking, "Стоянка", doc.getParking());
        try {
            setTextTo(holder.txvDateDetection, "Дата обнаружения", df.format(doc.getDateDetection()));
        } catch (Exception e) {
            setTextTo(holder.txvDateDetection, "", "");
        }
        try {
            setTextTo(holder.txvNoticeIn, "Дата получения извещения владельцем", df.format(doc.getNoticeIn()));
        } catch (Exception e) {
            setTextTo(holder.txvNoticeIn, "", "");
        }
        try {
            setTextTo(holder.txvNoticeOut, "Дата отправления извещения владельцу", df.format(doc.getNoticeOut()));
        } catch (Exception e) {
            setTextTo(holder.txvNoticeOut, "", "");
        }
        try {
            setTextTo(holder.txvEvacuationDate, "Дата эвакуации", df.format(doc.getEvacuationDate()));
        } catch (Exception e) {
            setTextTo(holder.txvEvacuationDate, "", "");
        }
        try {
            setTextTo(holder.txvReleaseDate, "Дата выдачи", df.format(doc.getReleaseDate()));
        } catch (Exception e) {
            setTextTo(holder.txvReleaseDate, "", "");
        }
        try {
            setTextTo(holder.txvUtilizationDate, "Дата утилизации", df.format(doc.getUtilizationDate()));
        } catch (Exception e) {
            setTextTo(holder.txvUtilizationDate, "", "");
        }
        Bitmap bm = Converter.getBitmapFromBase64Stirng(holder.iv.getContext(), detectionDocList.get(position).getImage());
        setTextTo(holder.txvStatus, "Статус", doc.getStatus());
        holder.iv.setImageBitmap(bm);
    }

    public void clear() {
        detectionDocList.clear();
        notifyDataSetChanged();
    }

    //Adapter's override method
    @Override
    public DetectionDocViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.detection_item, parent, false);
        DetectionDocViewHolder pvh = new DetectionDocViewHolder(v);
        return pvh;
    }

    private void setTextTo(TextView textView, String prefix, String argument) {
        textView.setVisibility((argument != null && !argument.isEmpty()) ? View.VISIBLE : View.GONE);
        textView.setText(String.format("%s : %s", prefix, argument));
    }

    public static class DetectionDocViewHolder extends RecyclerView.ViewHolder {
        ImageView iv;
        TextView txvManufacture;
        TextView txvModel;
        TextView txvContractor;
        TextView txvPolDep;
        TextView txvCarId;
        TextView txvDocId;
        TextView txvDateDetection;
        TextView txvStatus;
        TextView txvNoticeIn;
        TextView txvNoticeOut;
        TextView txvReleaseDate;
        TextView txvUtilizationDate;
        TextView txvEvacuationDate;
        TextView txvParking;
        public DetectionDocViewHolder(View itemView) {
            super(itemView);
            iv = (ImageView)itemView.findViewById(R.id.imvFoto);
            txvManufacture = (TextView)itemView.findViewById(R.id.txvItemManuf);
            txvModel = (TextView)itemView.findViewById(R.id.txvItemModel);
            txvContractor = (TextView)itemView.findViewById(R.id.txvItemContractor);
            txvPolDep = (TextView)itemView.findViewById(R.id.txvItemPoliceDep);
            txvCarId = (TextView)itemView.findViewById(R.id.txvItemCarID);
            txvDocId = (TextView) itemView.findViewById(R.id.txvDocId);
            txvDateDetection = (TextView)itemView.findViewById(R.id.txvDateDetection);
            txvStatus = (TextView)itemView.findViewById(R.id.txvStatus);
            txvNoticeIn = (TextView) itemView.findViewById(R.id.txvNoticeIn);
            txvNoticeOut = (TextView) itemView.findViewById(R.id.txvNoticeOut);
            txvReleaseDate = (TextView) itemView.findViewById(R.id.txvReleaseDate);
            txvUtilizationDate = (TextView) itemView.findViewById(R.id.txvUtilizationDate);
            txvEvacuationDate = (TextView) itemView.findViewById(R.id.txvEvacuationDate);
            txvParking = (TextView) itemView.findViewById(R.id.txvParking);
        }
    }

    @Override
    public int getItemCount() {
        return detectionDocList.size();
    }
}
